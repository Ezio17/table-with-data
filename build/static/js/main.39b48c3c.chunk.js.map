{"version":3,"sources":["data/electronics.js","components/Table.jsx","components/Search.jsx","components/Main.jsx","App.js","serviceWorker.js","index.js"],"names":["electronics","id","name","price","quantity","Table","props","react_default","a","createElement","className","onClick","sort","map","electronic","key","Search","type","placeholder","value","search","onChange","handleChange","Main","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isBoolean","bind","assertThisInitialized","handleSort","event","setState","target","who","_this$state","b","localeCompare","_this2","filter","toLocaleLowerCase","replace","includes","components_Search","components_Table","React","Component","App","Fragment","components_Main","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.39b48c3c.chunk.js","sourcesContent":["const electronics = [\r\n  {\r\n    id: 1,\r\n    name: 'Play Station 4',\r\n    price: 500.0,\r\n    quantity: 3,\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'iPhone XS',\r\n    price: 1000.0,\r\n    quantity: 2,\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Samsung Galaxy S10',\r\n    price: 1000.0,\r\n    quantity: 5,\r\n  },\r\n];\r\n\r\nexport default electronics;\r\n","import React from 'react';\r\n\r\nconst Table = props => {\r\n  return (\r\n    <table className=\"table\">\r\n      <thead className=\"table__thead\">\r\n        <tr className=\"table__title\">\r\n          <th onClick={() => props.sort('id')}>ID</th>\r\n          <th onClick={() => props.sort('name')}>Name</th>\r\n          <th onClick={() => props.sort('price')}>Price</th>\r\n          <th onClick={() => props.sort('quantity')}>Quanity</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody className=\"table__tbody\">\r\n        {props.electronics.map(electronic => (\r\n          <tr key={electronic.id}>\r\n            <td>{electronic.id}</td>\r\n            <td>{electronic.name}</td>\r\n            <td>{electronic.price}</td>\r\n            <td>{electronic.quantity}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React from 'react';\r\n\r\nconst Search = props => {\r\n  return (\r\n    <div className=\"search\">\r\n      <input\r\n        className=\"search__input\"\r\n        type=\"text\"\r\n        placeholder=\"search\"\r\n        value={props.search}\r\n        onChange={props.handleChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from 'react';\r\n\r\nimport electronics from '../data/electronics';\r\nimport Table from './Table';\r\nimport Search from './Search';\r\n\r\nclass Main extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      electronics,\r\n      search: '',\r\n      isBoolean: true,\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSort = this.handleSort.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({ search: event.target.value });\r\n  }\r\n\r\n  handleSort(who) {\r\n    const { electronics, isBoolean } = this.state;\r\n\r\n    electronics.sort((a, b) => {\r\n      if (isBoolean) {\r\n        if (typeof a[who] === 'number') {\r\n          return a[who] - b[who];\r\n        } else if (typeof a[who] === 'string') {\r\n          return a[who].localeCompare(b[who]);\r\n        }\r\n\r\n        return a[who] === b[who];\r\n      }\r\n      if (!isBoolean) {\r\n        if (typeof a[who] === 'number') {\r\n          return b[who] - a[who];\r\n        } else if (typeof a[who] === 'string') {\r\n          return b[who].localeCompare(a[who]);\r\n        }\r\n\r\n        return a[who] === b[who];\r\n      }\r\n    });\r\n\r\n    this.setState({\r\n      electronics,\r\n      isBoolean: !isBoolean,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let electronics = this.state.electronics.filter(electronic =>\r\n      electronic.name\r\n        .toLocaleLowerCase()\r\n        .replace(/\\s+/g, '')\r\n        .includes(this.state.search.toLocaleLowerCase().replace(/\\s+/g, ''))\r\n    );\r\n    return (\r\n      <main>\r\n        <Search search={this.state.search} handleChange={this.handleChange} />\r\n        <Table electronics={electronics} sort={this.handleSort} />\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\nimport './App.css';\n\nimport Main from './components/Main';\n\nfunction App() {\n  return (\n    <>\n      <Main />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}